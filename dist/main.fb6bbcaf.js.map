{"version":3,"sources":["js/main.js"],"names":["$","questionList","questionChoices","answerArray","apiKey","trendingMovieUrl","trendingTvUrl","trendingPeopleUrl","imageUrl","quizScore","hide","click","each","index","$selectedChoice","currentId","find","attr","correctId","first","console","log","parent","window","location","reload","show","trendingMovies","trendingTvShows","trendingPeople","updateUi","axios","get","params","api_key","then","response","movies","data","results","createQuestions","shows","people","quizType","shuffledResults","_","shuffle","question","forEach","result","push","html","questions","questionHtml","processPeopleQuestion","processMovieQuestion","processTvQuestion","append","selectedMovie","sample","id","choicesHtml","map","movie","buildMovieAnswerChoiceHtml","title","poster_path","join","buildMovieQuestionHtml","overview","movieTitle","movieId","movieImage","selectedMovieId","movieOverview","answerChoicesHtml","selectedShow","buildTvAnswerChoiceHtml","name","buildTvQuestionHtml","showName","showId","showImage","selectedShowId","showOverview","selectedPerson","person","buildPeopleAnswerChoiceHtml","known_for_department","profile_path","buildPeopleQuestionHtml","known_for","personName","personId","personKnownFor","personImage","selectedPersonId","personKnownForZero","movieOverviewZero","personKnownForOne","movieOverviewOne","personKnownForTwo","movieOverviewTwo"],"mappings":"AAAAA,CAAC,CAAC,YAAY;AACZ,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAMC,eAAe,GAAG,EAAxB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAMC,MAAM,qCAAZ;AACA,MAAMC,gBAAgB,GAAG,iDAAzB;AACA,MAAMC,aAAa,GAAG,8CAAtB;AACA,MAAMC,iBAAiB,GAAG,kDAA1B;AACA,MAAMC,QAAQ,GAAG,kDAAjB;AACA,MAAIC,SAAS,GAAG,CAAhB,CATY,CAWZ;;AACAT,EAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBU,IAArB;AAEAV,EAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBW,KAAlB,CAAwB,YAAM;AAC5BX,IAAAA,CAAC,CAAC,UAAD,CAAD,CAAcY,IAAd,CAAmB,UAASC,KAAT,EAAgB;AACjC,UAAMC,eAAe,GAAGd,CAAC,CAAC,eAAD,CAAzB,CADiC,CAEjC;;AACA,UAAMe,SAAS,GAAGf,CAAC,CAAC,IAAD,CAAD,CAAQgB,IAAR,CAAaF,eAAb,EAA8BG,IAA9B,CAAmC,IAAnC,CAAlB,CAHiC,CAIjC;;AACA,UAAMC,SAAS,GAAGlB,CAAC,CAAC,IAAD,CAAD,CAAQgB,IAAR,CAAa,OAAb,EAAsBG,KAAtB,GAA8BF,IAA9B,CAAmC,MAAnC,CAAlB,CALiC,CAMjC;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,KAAKG,SAA1B;;AAGA,UAAIH,SAAS,KAAKG,SAAlB,EAA6B;AAC3B;AACAlB,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQgB,IAAR,CAAaF,eAAb,EAA8BQ,MAA9B,GAAuCL,IAAvC,CAA4C,OAA5C,EAAqD,8HAArD;AACAR,QAAAA,SAAS;AACTW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACD,OALD,MAKO;AACL;AACA;AACAT,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQgB,IAAR,CAAaF,eAAb,EAA8BQ,MAA9B,GAAuCL,IAAvC,CAA4C,OAA5C,EAAqD,4HAArD,EAHK,CAIL;;AACAjB,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQgB,IAAR,CAAa,MAAME,SAAnB,EAA8BI,MAA9B,GAAuCL,IAAvC,CAA4C,OAA5C,EAAqD,8HAArD;AACD;AACF,KAtBD;AAuBD,GAxBD;AA0BAjB,EAAAA,CAAC,CAAC,OAAD,CAAD,CAAWW,KAAX,CAAiB,YAAM;AACrBY,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GADqB,CAErB;AACA;AACD,GAJD;AAMAzB,EAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBW,KAAjB,CAAuB,YAAM;AAC3BX,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBU,IAArB;AACAV,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBU,IAArB;AACAV,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqB0B,IAArB;AACAC,IAAAA,cAAc;AACf,GALD;AAOA3B,EAAAA,CAAC,CAAC,UAAD,CAAD,CAAcW,KAAd,CAAoB,YAAM;AACxBX,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBU,IAArB;AACAV,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBU,IAArB;AACAV,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqB0B,IAArB;AACAE,IAAAA,eAAe;AAChB,GALD;AAOA5B,EAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBW,KAAlB,CAAwB,YAAM;AAC5BX,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBU,IAArB;AACAV,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBU,IAArB;AACAV,IAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqB0B,IAArB;AACAG,IAAAA,cAAc;AACf,GALD;AAOA7B,EAAAA,CAAC,CAAC,QAAD,CAAD,CAAYW,KAAZ,CAAkB,YAAM;AACtBa,IAAAA,QAAQ,CAACC,MAAT;AACD,GAFD;AAIAK,EAAAA,QAAQ;;AAGR,WAASH,cAAT,GAA0B;AACxB;AACAI,IAAAA,KAAK,CAACC,GAAN,CAAU3B,gBAAV,EAA4B;AAC1B4B,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE9B;AADH;AADkB,KAA5B,EAKC+B,IALD,CAKM,UAACC,QAAD,EAAc;AAClB;AACA,UAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAA7B;AACAtC,MAAAA,YAAY,GAAG,EAAf;AACA,aAAOuC,eAAe,CAACH,MAAD,EAAS,OAAT,CAAtB;AACD,KAVD;AAYD;;AAED,WAAST,eAAT,GAA2B;AACzB;AACAG,IAAAA,KAAK,CAACC,GAAN,CAAU1B,aAAV,EAAyB;AACvB2B,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE9B;AADH;AADe,KAAzB,EAKC+B,IALD,CAKM,UAACC,QAAD,EAAc;AAClB;AACA,UAAMK,KAAK,GAAGL,QAAQ,CAACE,IAAT,CAAcC,OAA5B;AACAtC,MAAAA,YAAY,GAAG,EAAf;AACA,aAAOuC,eAAe,CAACC,KAAD,EAAQ,IAAR,CAAtB;AACD,KAVD;AAWD;;AAED,WAASZ,cAAT,GAA0B;AACxB;AACAE,IAAAA,KAAK,CAACC,GAAN,CAAUzB,iBAAV,EAA6B;AAC3B0B,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE9B;AADH;AADmB,KAA7B,EAKC+B,IALD,CAKM,UAACC,QAAD,EAAc;AAClB;AACA,UAAMM,MAAM,GAAGN,QAAQ,CAACE,IAAT,CAAcC,OAA7B;AACAtC,MAAAA,YAAY,GAAG,EAAf;AACA,aAAOuC,eAAe,CAACE,MAAD,EAAS,QAAT,CAAtB;AACD,KAVD;AAWD;;AAED,WAASF,eAAT,CAAyBD,OAAzB,EAAkCI,QAAlC,EAA4C;AAC1C;AACA,QAAMC,eAAe,GAAGC,CAAC,CAACC,OAAF,CAAUP,OAAV,CAAxB,CAF0C,CAG1C;AACA;AACA;;;AACA,QAAIQ,QAAQ,GAAG,EAAf;AACAH,IAAAA,eAAe,CAACI,OAAhB,CAAwB,UAACC,MAAD,EAASpC,KAAT,EAAmB;AACzC;AACA;AACAkC,MAAAA,QAAQ,CAACG,IAAT,CAAcD,MAAd;;AACA,UAAI,CAACpC,KAAK,GAAG,CAAT,IAAc,CAAd,KAAoB,CAAxB,EAA2B;AACzBZ,QAAAA,YAAY,CAACiD,IAAb,CAAkBH,QAAlB;AACAA,QAAAA,QAAQ,GAAG,EAAX;AACD;AACF,KARD;AASAjB,IAAAA,QAAQ,CAACa,QAAD,CAAR;AACA,WAAO1C,YAAP;AACD;;AAED,WAAS6B,QAAT,CAAkBa,QAAlB,EAA4B;AAC1B3C,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBmD,IAApB,CAAyB,EAAzB,EAD0B,CAE1B;AACA;AACA;;AACAlD,IAAAA,YAAY,CAAC+C,OAAb,CAAqB,UAACI,SAAD,EAAe;AAElC,UAAIC,YAAJ;;AACA,UAAIV,QAAQ,KAAK,QAAjB,EAA2B;AACzBU,QAAAA,YAAY,GAAGC,qBAAqB,CAACF,SAAD,CAApC;AACD,OAFD,MAEO,IAAIT,QAAQ,KAAK,OAAjB,EAA0B;AAC/BU,QAAAA,YAAY,GAAGE,oBAAoB,CAACH,SAAD,CAAnC;AACD,OAFM,MAEA,IAAIT,QAAQ,KAAK,IAAjB,EAAuB;AAC5BU,QAAAA,YAAY,GAAGG,iBAAiB,CAACJ,SAAD,CAAhC;AACD;;AACDpD,MAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoByD,MAApB,CAA2BJ,YAA3B;AACD,KAXD;AAYD,GA7JW,CA+JZ;;;AACA,WAASE,oBAAT,CAA8BlB,MAA9B,EAAsC;AACpC;AACA,QAAMqB,aAAa,GAAGb,CAAC,CAACc,MAAF,CAAStB,MAAT,CAAtB,CAFoC,CAGpC;;;AACAlC,IAAAA,WAAW,CAAC+C,IAAZ,CAAiBQ,aAAa,CAACE,EAA/B;AACA,QAAMC,WAAW,GAAGxB,MAAM,CAACyB,GAAP,CAAW,UAACC,KAAD,EAAW;AACxC,aAAOC,0BAA0B,CAACD,KAAK,CAACE,KAAP,EAAaF,KAAK,CAACH,EAAnB,EAAsBG,KAAK,CAACG,WAA5B,EAAwCR,aAAa,CAACE,EAAtD,CAAjC;AACD,KAFmB,EAEjBO,IAFiB,CAEZ,EAFY,CAApB,CALoC,CAQpC;;AACA,WAAOC,sBAAsB,CAACV,aAAa,CAACW,QAAf,EAAyBR,WAAzB,CAA7B;AACD;;AAED,WAASG,0BAAT,CAAqCM,UAArC,EAAgDC,OAAhD,EAAwDC,UAAxD,EAAmEC,eAAnE,EAAoF;AAClF,qOAGoDjE,QAHpD,SAG+DgE,UAH/D,wGAOQF,UAPR,wJASiHG,eATjH,qBASyIF,OATzI;AAaD;;AAED,WAASH,sBAAT,CAAgCM,aAAhC,EAA+CC,iBAA/C,EAAkE;AAChE,wQAMMD,aANN,0QAacC,iBAbd;AAmBD,GAhNW,CAkNZ;;;AACA,WAASnB,iBAAT,CAA2Bf,KAA3B,EAAkC;AAChC;AACA,QAAMmC,YAAY,GAAG/B,CAAC,CAACc,MAAF,CAASlB,KAAT,CAArB,CAFgC,CAGhC;;;AACAtC,IAAAA,WAAW,CAAC+C,IAAZ,CAAiB0B,YAAY,CAAChB,EAA9B;AACA,QAAMC,WAAW,GAAGpB,KAAK,CAACqB,GAAN,CAAU,UAACpC,IAAD,EAAU;AACtC,aAAOmD,uBAAuB,CAACnD,IAAI,CAACoD,IAAN,EAAWpD,IAAI,CAACkC,EAAhB,EAAmBlC,IAAI,CAACwC,WAAxB,EAAoCU,YAAY,CAAChB,EAAjD,CAA9B;AACD,KAFmB,EAEjBO,IAFiB,CAEZ,EAFY,CAApB,CALgC,CAQhC;;AACA,WAAOY,mBAAmB,CAACH,YAAY,CAACP,QAAd,EAAwBR,WAAxB,CAA1B;AACD;;AAED,WAASgB,uBAAT,CAAkCG,QAAlC,EAA2CC,MAA3C,EAAkDC,SAAlD,EAA4DC,cAA5D,EAA4E;AAC1E,qOAGoD3E,QAHpD,SAG+D0E,SAH/D,wGAOQF,QAPR,wJASiHG,cATjH,qBASwIF,MATxI;AAaD;;AAED,WAASF,mBAAT,CAA6BK,YAA7B,EAA2CT,iBAA3C,EAA8D;AAC5D,iRAMQS,YANR,+NAYcT,iBAZd;AAkBD,GAlQW,CAoQZ;;;AACA,WAASrB,qBAAT,CAA+BZ,MAA/B,EAAuC;AACrC;AACA,QAAM2C,cAAc,GAAGxC,CAAC,CAACc,MAAF,CAASjB,MAAT,CAAvB;;AACAvC,IAAAA,WAAW,CAAC+C,IAAZ,CAAiBmC,cAAc,CAACzB,EAAhC;AACA,QAAMC,WAAW,GAAGnB,MAAM,CAACoB,GAAP,CAAW,UAACwB,MAAD,EAAY;AACzC,aAAOC,2BAA2B,CAACD,MAAM,CAACR,IAAR,EAAaQ,MAAM,CAAC1B,EAApB,EAAuB0B,MAAM,CAACE,oBAA9B,EAAmDF,MAAM,CAACG,YAA1D,EAAuEJ,cAAc,CAACzB,EAAtF,CAAlC;AACD,KAFmB,EAEjBO,IAFiB,CAEZ,EAFY,CAApB;AAGA,WAAOuB,uBAAuB,CAACL,cAAc,CAACM,SAAf,CAAyB,CAAzB,EAA4B1B,KAA7B,EAAmCoB,cAAc,CAACM,SAAf,CAAyB,CAAzB,EAA4BtB,QAA/D,EAAwEgB,cAAc,CAACM,SAAf,CAAyB,CAAzB,EAA4B1B,KAApG,EAA0GoB,cAAc,CAACM,SAAf,CAAyB,CAAzB,EAA4BtB,QAAtI,EAA+IgB,cAAc,CAACM,SAAf,CAAyB,CAAzB,EAA4B1B,KAA3K,EAAiLoB,cAAc,CAACM,SAAf,CAAyB,CAAzB,EAA4BtB,QAA7M,EAAuNR,WAAvN,CAA9B;AACD;;AAED,WAAS0B,2BAAT,CAAsCK,UAAtC,EAAiDC,QAAjD,EAA0DC,cAA1D,EAAyEC,WAAzE,EAAqFC,gBAArF,EAAuG;AACrG,qOAGoDxF,QAHpD,SAG+DuF,WAH/D,wGAOQH,UAPR,wJASiHI,gBATjH,qBAS0IH,QAT1I;AAYD;;AAED,WAASH,uBAAT,CAAiCO,kBAAjC,EAAoDC,iBAApD,EAAsEC,iBAAtE,EAAwFC,gBAAxF,EAAyGC,iBAAzG,EAA2HC,gBAA3H,EAA6I3B,iBAA7I,EAAgK;AAC9J,kYAQYsB,kBARZ,yEAUiCC,iBAVjC,8IAcYC,iBAdZ,yEAgBiCC,gBAhBjC,8IAoBYC,iBApBZ,yEAsBiCC,gBAtBjC,iSA6Bc3B,iBA7Bd;AAmCD;AACF,CAnUA,CAAD","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["$(function () {\n  let questionList = []\n  const questionChoices = []\n  let answerArray = []\n  const apiKey = process.env.TMDB_API_KEY\n  const trendingMovieUrl = \"https://api.themoviedb.org/3/trending/movie/day\"\n  const trendingTvUrl = \"https://api.themoviedb.org/3/trending/tv/day\"\n  const trendingPeopleUrl = \"https://api.themoviedb.org/3/trending/person/day\"\n  const imageUrl = \"https://image.tmdb.org/t/p/w300_and_h450_bestv2/\"\n  let quizScore = 0\n\n  //initial hide of quiz container\n  $('.quiz-container').hide()\n\n  $(\"#see-results\").click(() => {\n    $(\".choices\").each(function(index) {\n      const $selectedChoice = $(\"input:checked\")\n      // console.log($(this).find($selectedChoice).attr(\"id\"))\n      const currentId = $(this).find($selectedChoice).attr(\"id\")\n      // console.log(`Current ID - ${currentId}`)\n      const correctId = $(this).find(\"input\").first().attr(\"name\")\n      // console.log(`Correct ID - ${correctId}`)\n      console.log(currentId === correctId)\n\n\n      if (currentId === correctId) {\n        // console.log(\"selected correct answer\")\n        $(this).find($selectedChoice).parent().attr(\"class\", \"answer-choice fa fa-check fa-2x container p-6 flex flex-col items-stretch text-center bg-green-200 justify-between font-sans\");\n        quizScore++\n        console.log(quizScore)\n      } else {\n        // console.log(\"selected incorrect answer\")\n        //adds CSS style to incorrect selection\n        $(this).find($selectedChoice).parent().attr(\"class\", \"answer-choice fa fa-times fa-2x container p-6 flex flex-col items-stretch text-center bg-red-200 justify-between font-sans\")\n        //adds CSS style to choice with correct ID\n        $(this).find(\"#\" + correctId).parent().attr(\"class\", \"answer-choice fa fa-check fa-2x container p-6 flex flex-col items-stretch text-center bg-green-200 justify-between font-sans\")\n      }\n    })\n  })\n\n  $(\"#home\").click(() => {\n    window.location.reload()\n    // $('.home-container').show()\n    // $('.quiz-container').hide()\n  })\n\n  $(\"#movie-link\").click(() => {\n    $('.home-container').hide()\n    $('.quiz-container').hide()\n    $('.quiz-container').show()\n    trendingMovies()\n  })\n\n  $(\"#tv-link\").click(() => {\n    $('.home-container').hide()\n    $('.quiz-container').hide()\n    $('.quiz-container').show()\n    trendingTvShows();\n  })\n\n  $(\"#people-link\").click(() => {\n    $('.home-container').hide()\n    $('.quiz-container').hide()\n    $('.quiz-container').show()\n    trendingPeople();\n  })\n\n  $(\"#reset\").click(() => {\n    location.reload()\n  })\n\n  updateUi()\n\n\n  function trendingMovies() {\n    //console.log('making API call to movies')\n    axios.get(trendingMovieUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      //console.log(response)\n      const movies = response.data.results\n      questionList = []\n      return createQuestions(movies, 'movie')\n    })\n\n  }\n\n  function trendingTvShows() {\n    //console.log('making API call to tv')\n    axios.get(trendingTvUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      //console.log(response)\n      const shows = response.data.results\n      questionList = []\n      return createQuestions(shows, 'tv')\n    })\n  }\n\n  function trendingPeople() {\n    //console.log('making API call to people')\n    axios.get(trendingPeopleUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      //console.log(response)\n      const people = response.data.results\n      questionList = []\n      return createQuestions(people, 'people')\n    })\n  }\n\n  function createQuestions(results, quizType) {\n    //lojack to shuffle the parameter passed into function\n    const shuffledResults = _.shuffle(results)\n    // console.log(shuffledResults)\n    //iterate through the array\n    //structure - [[],[],[],[],[]]\n    let question = []\n    shuffledResults.forEach((result, index) => {\n      //create an empty question array and store 4 numbers in an inner array unitl all possibilities are in an array\n      //group every 4 elements in their own array\n      question.push(result)\n      if ((index + 1) % 4 === 0) {\n        questionList.push(question)\n        question = []\n      }\n    })\n    updateUi(quizType)\n    return questionList\n  }\n\n  function updateUi(quizType) {\n    $('.question-list').html('')\n    //4 choices for each question; 5 questions\n    //loop through the questionList array to pull the 4 properties for title\n    //prints the amount of arrays there are\n    questionList.forEach((questions) => {\n\n      let questionHtml\n      if (quizType === 'people') {\n        questionHtml = processPeopleQuestion(questions)\n      } else if (quizType === 'movie') {\n        questionHtml = processMovieQuestion(questions)\n      } else if (quizType === 'tv') {\n        questionHtml = processTvQuestion(questions)\n      }\n      $(\".question-list\").append(questionHtml)\n    })\n  }\n\n  //****MOVIE quiz functions*****\n  function processMovieQuestion(movies) {\n    //select a random movie to be the correct movie\n    const selectedMovie = _.sample(movies)\n    //console.log(selectedMovie)\n    answerArray.push(selectedMovie.id)\n    const choicesHtml = movies.map((movie) => {\n      return buildMovieAnswerChoiceHtml(movie.title,movie.id,movie.poster_path,selectedMovie.id)\n    }).join('')\n    //console.log(choicesHtml)\n    return buildMovieQuestionHtml(selectedMovie.overview, choicesHtml)\n  }\n\n  function buildMovieAnswerChoiceHtml (movieTitle,movieId,movieImage,selectedMovieId) {\n    return (\n      `<div class=\"container p-6 flex flex-col items-stretch text-center hover:bg-orange-200 justify-between\">\n        <span class='answer-choice-label'>\n          <img class=\"choice-image rounded-t-lg\" src=\"${imageUrl}${movieImage}\">\n          </img>\n        </span>\n        <span class=\"py-2 font-sans\">\n          ${movieTitle}\n        </span>\n        <input type=\"radio\" class=\"choice-button checked:bg-gray-900 checked:border-transparent self-center\" name=\"${selectedMovieId}\" id=\"${movieId}\">\n      </div>\n      `\n    )\n  }\n\n  function buildMovieQuestionHtml(movieOverview, answerChoicesHtml) {\n    return (\n      `<div class=\"question-container border-double border-4 border-gray-600 flex flex-col p-4 mb-4\">\n      <p class=\"question underline uppercase text-2xl\">\n        Movie Overview -\n      </p>\n      <p class=\"p-4 justify-center\">\n        ${movieOverview}\n      </p>\n\n        <div class=\"choices-container\">\n          <div class=\"choices-header font-bold\">\n            Select One Movie:\n              <div class=\"choices flex justify-center flex-col sm:flex-row align-baseline\">\n                ${answerChoicesHtml}\n              </div>\n          </div>\n        </div>\n      </div>`\n    )\n  }\n\n  //****TV quiz functions*****\n  function processTvQuestion(shows) {\n    //select a random movie to be the correct movie\n    const selectedShow = _.sample(shows)\n    // console.log(selectedShow)\n    answerArray.push(selectedShow.id)\n    const choicesHtml = shows.map((show) => {\n      return buildTvAnswerChoiceHtml(show.name,show.id,show.poster_path,selectedShow.id)\n    }).join('')\n    // console.log(choicesHtml)\n    return buildTvQuestionHtml(selectedShow.overview, choicesHtml)\n  }\n\n  function buildTvAnswerChoiceHtml (showName,showId,showImage,selectedShowId) {\n    return (\n      `<div class=\"container p-6 flex flex-col items-stretch text-center hover:bg-orange-200 justify-between\">\n        <span class='answer-choice-label'>\n          <img class=\"choice-image rounded-t-lg\" src=\"${imageUrl}${showImage}\">\n          </img>\n        </span>\n        <span class=\"py-2 font-sans\">\n          ${showName}\n        </span>\n        <input type=\"radio\" class=\"choice-button checked:bg-gray-900 checked:border-transparent self-center\" name=\"${selectedShowId}\" id=\"${showId}\">\n      </div>\n      `\n    )\n  }\n\n  function buildTvQuestionHtml(showOverview, answerChoicesHtml) {\n    return (\n      `<div class=\"question-container border-double border-4 border-gray-600 flex flex-col p-4 mb-4\">\n        <p class=\"question underline uppercase text-2xl\">\n          Show Overview -\n        </p>\n        <p class=\"p-4 justify-center\">\n          ${showOverview}\n        </p>\n        <div class=\"choices-container\">\n          <div class=\"choices-header font-bold\">\n            Select One Show:\n              <div class=\"choices flex flex-row\">\n                ${answerChoicesHtml}\n              </div>\n          </div>\n        </div>\n      </div>`\n    )\n  }\n\n  //****PEOPLE quiz functions*****\n  function processPeopleQuestion(people) {\n    //select a random movie to be the correct movie\n    const selectedPerson = _.sample(people)\n    answerArray.push(selectedPerson.id)\n    const choicesHtml = people.map((person) => {\n      return buildPeopleAnswerChoiceHtml(person.name,person.id,person.known_for_department,person.profile_path,selectedPerson.id)\n    }).join('')\n    return buildPeopleQuestionHtml(selectedPerson.known_for[0].title,selectedPerson.known_for[0].overview,selectedPerson.known_for[1].title,selectedPerson.known_for[1].overview,selectedPerson.known_for[2].title,selectedPerson.known_for[2].overview, choicesHtml)\n  }\n\n  function buildPeopleAnswerChoiceHtml (personName,personId,personKnownFor,personImage,selectedPersonId) {\n    return (\n      `<div class=\"container p-6 flex flex-col items-stretch text-center hover:bg-orange-200 justify-between\">\n        <span class='answer-choice-label'>\n          <img class=\"choice-image rounded-t-lg\" src=\"${imageUrl}${personImage}\">\n          </img>\n        </span>\n        <span class=\"py-2 font-sans\">\n          ${personName}\n        </span>\n        <input type=\"radio\" class=\"choice-button checked:bg-gray-900 checked:border-transparent self-center\" name=\"${selectedPersonId}\" id=\"${personId}\">\n      </div>`\n    )\n  }\n\n  function buildPeopleQuestionHtml(personKnownForZero,movieOverviewZero,personKnownForOne,movieOverviewOne,personKnownForTwo,movieOverviewTwo, answerChoicesHtml) {\n    return (\n      `<div class=\"question-container border-double border-4 border-gray-600 flex flex-col p-4 mb-4\">\n        <p class=\"question underline uppercase text-2xl\">\n          This person is associated with -\n        </p>\n        <ol class=\"flex flex-col p-4\">\n          <li>\n            <span class=\"text-lg font-semibold uppercase justify-start\">\n              ${personKnownForZero}\n            </span>\n            <p class=\"pl-4 italic\">${movieOverviewZero}</p>\n          </li>\n          <li>\n            <span class=\"text-lg font-semibold uppercase justify-start\">\n              ${personKnownForOne}\n            </span>\n            <p class=\"pl-4 italic\">${movieOverviewOne}</p>\n          </li>\n          <li>\n            <span class=\"text-lg font-semibold uppercase justify-start\">\n              ${personKnownForTwo}\n            </span>\n            <p class=\"pl-4 italic\">${movieOverviewTwo}</p>\n          </li>\n        </ol>\n        <div class=\"choices-container\">\n          <div class=\"choices-header font-bold\">\n            Select One Person:\n              <div class=\"choices flex justify-center flex-col sm:flex-row align-baseline\">\n                ${answerChoicesHtml}\n              </div>\n          </div>\n        </div>\n      </div>`\n    )\n  }\n})\n"]}