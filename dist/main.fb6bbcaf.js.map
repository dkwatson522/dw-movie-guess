{"version":3,"sources":["js/main.js"],"names":["$","questionList","questionChoices","answerArray","apiKey","trendingMovieUrl","trendingTvUrl","trendingPeopleUrl","imageUrl","quizScore","hide","click","each","index","$selectedChoice","console","log","find","attr","currentId","correctId","first","parent","show","trendingMovies","trendingTvShows","trendingPeople","location","reload","updateUi","axios","get","params","api_key","then","response","movies","data","results","createQuestions","shows","people","quizType","shuffledResults","_","shuffle","question","forEach","result","push","html","questions","questionHtml","processPeopleQuestion","processQuestion","append","selectedMovie","sample","id","choicesHtml","map","movie","buildAnswerChoiceHtml","title","poster_path","join","buildQuestionHtml","overview","movieTitle","movieId","movieImage","selectedMovieId","movieOverview","answerChoicesHtml","selectedPerson","person","buildPeopleAnswerChoiceHtml","name","known_for_department","profile_path","buildPeopleQuestionHtml","known_for","personName","personId","personKnownFor","personImage","selectedPersonId","personKnownForZero","movieOverviewZero","personKnownForOne","movieOverviewOne","personKnownForTwo","movieOverviewTwo"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["$(function () {\n  let questionList = []\n  const questionChoices = []\n  let answerArray = []\n  const apiKey = process.env.TMDB_API_KEY\n  const trendingMovieUrl = \"https://api.themoviedb.org/3/trending/movie/week\"\n  const trendingTvUrl = \"https://api.themoviedb.org/3/trending/tv/week\"\n  const trendingPeopleUrl = \"https://api.themoviedb.org/3/trending/person/week\"\n  const imageUrl = \"https://image.tmdb.org/t/p/w300_and_h450_bestv2/\"\n  let quizScore = 0\n\n  $('.quiz-container').hide()\n\n  //add anonymous arrow function for next button\n  $(\"#see-results\").click(() => {\n    //console.log(\"results\")\n    $(\".choices\").each(function(index) {\n      // // answerArray.includes(parseInt($('input[type=radio][name=${}]:checked').attr('id')))\n      // var item1 = $( \"li.item-1\" )[ 0 ];\n      // $( \"li.item-ii\" ).find( item1 ).css( \"background-color\", \"red\" );\n      //$ as jQuery object(naming convention;best practice)\n      const $selectedChoice = $(\"input:checked\")\n      console.log($(this).find($selectedChoice).attr(\"id\"))\n      const currentId = $(this).find($selectedChoice).attr(\"id\")\n      console.log(`Current ID - ${currentId}`)\n      const correctId = $(this).find(\"input\").first().attr(\"name\")\n      console.log(`Correct ID - ${correctId}`)\n      console.log(currentId === correctId)\n\n      if (currentId === correctId) {\n        console.log(\"selected correct answer\")\n        $(this).find($selectedChoice).parent().attr(\"class\", \"answer-choice fa fa-check fa-2x\")\n      } else {\n        console.log(\"selected incorrect answer\")\n        //adds CSS style to incorrect selection\n        $(this).find($selectedChoice).parent().attr(\"class\", \"answer-choice fa fa-times fa-2x\")\n        //adds CSS style to choice with correct ID\n        $(this).find(\"#\" + correctId).parent().attr(\"class\", \"answer-choice fa fa-check fa-2x\")\n      }\n    })\n  })\n  //add anonymous arrow function for previous button\n  $(\"#go-back\").click(() => {\n    console.log('clicking home button')\n    $('.home-container').show()\n    $('.quiz-container').hide()\n  })\n\n  $(\"#movie-link\").click(() => {\n    // window.location.pathname = '/movie_quiz.html'\n    // window.location.href = 'http://localhost:1234/movie_quiz.html'\n    // window.onload = function() {\n      // trendingMovies();\n    // }\n    console.log(\"go to movie quiz\")\n    trendingMovies()\n    $('.home-container').hide()\n    $('.quiz-container').show()\n  })\n\n  $(\"#tv-link\").click(() => {\n    // window.location.pathname = '/tv_quiz.html'\n    // window.location.href = 'http://localhost:1234/tv_quiz.html'\n    // window.onload = function() {\n    $('.home-container').hide()\n    $('.quiz-container').show()\n    trendingTvShows();\n    // }\n    console.log(\"go to tv quiz\")\n  })\n\n  $(\"#people-link\").click(() => {\n    $('.home-container').hide()\n    $('.quiz-container').show()\n    trendingPeople();\n    // window.onclick = function() {\n      // trendingTvShows();\n    // }\n    //console.log(\"go to people quiz\")\n  })\n\n  $(\"#reset\").click(() => {\n    location.reload()\n  })\n\n  updateUi()\n\n\n  function trendingMovies() {\n    console.log('making API call to movies')\n    axios.get(trendingMovieUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      console.log(response)\n      const movies = response.data.results\n      questionList = []\n      return createQuestions(movies, 'movie')\n    })\n\n  }\n\n  function trendingTvShows() {\n    console.log('making API call to tv')\n    axios.get(trendingTvUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      console.log(response)\n      const shows = response.data.results\n      questionList = []\n      return createQuestions(shows, 'tv')\n    })\n  }\n\n  function trendingPeople() {\n    console.log('making API call to people')\n    axios.get(trendingPeopleUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      console.log(response)\n      const people = response.data.results\n      questionList = []\n      return createQuestions(people, 'people')\n    })\n\n\n    // $.ajax({\n    //   url: trendingPeopleUrl,\n    //   type: \"GET\",\n    //   data: { api_key: apiKey }\n    // })\n    //   .done((response) => {\n    //     const people = response.results\n    //     //  console.log(response)\n    //\n    //     createQuestions(people)\n    //   })\n    //   .fail(() => {\n    //     alert(\"an error occured\")\n    //   })\n\n  }\n\n  function createQuestions(results, quizType) {\n    //lojack to shuffle the parameter passed into function\n    const shuffledResults = _.shuffle(results)\n    // console.log(shuffledResults)\n    //iterate through the array\n    //structure - [[],[],[],[],[]]\n    let question = []\n    shuffledResults.forEach((result, index) => {\n      //create an empty question array and store 4 numbers in an inner array unitl all possibilities are in an array\n      //group every 4 elements in their own array\n      question.push(result)\n      if ((index + 1) % 4 === 0) {\n        questionList.push(question)\n        question = []\n      }\n\n    })\n    // console.log(questionList)\n    updateUi(quizType)\n    return questionList\n  }\n\n  function updateUi(quizType) {\n    $('.question-list').html('')\n    console.log(questionList)\n    //4 choices for each question; 5 questions\n    //loop through the questionList array to pull the 4 properties for title\n    //prints the amount of arrays there are\n    questionList.forEach((questions) => {\n\n      let questionHtml\n      if (quizType === 'people') {\n        questionHtml = processPeopleQuestion(questions)\n      } else if (quizType === 'movie' || quizType === 'tv') {\n        questionHtml = processQuestion(questions)\n      }\n      //console.log(questionHtml)\n      $(\".question-list\").append(questionHtml)\n    })\n  }\n\n  function processQuestion(movies) {\n    //select a random movie to be the correct movie\n    const selectedMovie = _.sample(movies)\n    //console.log(selectedMovie)\n    answerArray.push(selectedMovie.id)\n    const choicesHtml = movies.map((movie) => {\n      return buildAnswerChoiceHtml(movie.title,movie.id,movie.poster_path,selectedMovie.id)\n    }).join('')\n    //console.log(choicesHtml)\n    return buildQuestionHtml(selectedMovie.overview, choicesHtml)\n  }\n\n  function buildAnswerChoiceHtml (movieTitle,movieId,movieImage,selectedMovieId) {\n    return (\n      `<div class=\"answer-choice\">\n        <input type=\"radio\" class=\"choice-button\" name=\"${selectedMovieId}\" id=\"${movieId}\">\n        <span class='answer-choice-label'> <img class=\"choice-image\" src=\"${imageUrl}${movieImage}\"></img> ${movieTitle}</span>\n      </div>`\n    )\n  }\n\n  function buildQuestionHtml(movieOverview, answerChoicesHtml) {\n    return (\n      `<div class=\"question-container\">\n        <p class=\"question\">\n          Movie Overview -  ${movieOverview}\n        </p>\n\n        <div class=\"choices-container\">\n          <div class=\"choices-header\">\n            Choices:\n              <div class=\"choices\">\n                ${answerChoicesHtml}\n              </div>\n          </div>\n        </div>\n      </div>`\n    )\n  }\n\n  //****PEOPLE quiz functions*****\n  function processPeopleQuestion(people) {\n    //select a random movie to be the correct movie\n    const selectedPerson = _.sample(people)\n    console.log(selectedPerson)\n    answerArray.push(selectedPerson.id)\n    const choicesHtml = people.map((person) => {\n      return buildPeopleAnswerChoiceHtml(person.name,person.id,person.known_for_department,person.profile_path,selectedPerson.id)\n    }).join('')\n    //console.log(choicesHtml)\n    return buildPeopleQuestionHtml(selectedPerson.known_for[0].title,selectedPerson.known_for[0].overview,selectedPerson.known_for[1].title,selectedPerson.known_for[1].overview,selectedPerson.known_for[2].title,selectedPerson.known_for[2].overview, choicesHtml)\n  }\n\n  function buildPeopleAnswerChoiceHtml (personName,personId,personKnownFor,personImage,selectedPersonId) {\n    return (\n      `<div class=\"answer-choice\">\n        <input type=\"radio\" class=\"choice-button\" name=\"${selectedPersonId}\" id=\"${personId}\">\n        <span class='answer-choice-label'> <img class=\"choice-image\" src=\"${imageUrl}${personImage}\"></img> ${personName}</span>\n      </div>`\n    )\n  }\n\n  function buildPeopleQuestionHtml(personKnownForZero,movieOverviewZero,personKnownForOne,movieOverviewOne,personKnownForTwo,movieOverviewTwo, answerChoicesHtml) {\n    return (\n      `<div class=\"question-container\">\n        <p class=\"question\">\n          This person is asscoiated with\n        </p>\n        <ol>\n          <li>${personKnownForZero} - ${movieOverviewZero}</li>\n          <li>${personKnownForOne} - ${movieOverviewOne}</li>\n          <li>${personKnownForTwo} - ${movieOverviewTwo}</li>\n        </ol>\n        <div class=\"choices-container\">\n          <div class=\"choices-header\">\n            Choices:\n              <div class=\"choices\">\n                ${answerChoicesHtml}\n              </div>\n          </div>\n        </div>\n      </div>`\n    )\n  }\n})\n"]}