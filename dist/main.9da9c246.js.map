{"version":3,"sources":["js/main.js"],"names":["$","questionList","answerArray","apiKey","trendingMovieUrl","trendingTvUrl","trendingPeopleUrl","imageUrl","createQuestions","results","quizType","shuffledResults","_","shuffle","question","forEach","result","index","push","updateUi","html","console","log","questions","questionHtml","processPeopleQuestion","people","selectedPerson","sample","id","choicesHtml","map","person","buildPeopleAnswerChoiceHtml","personName","name","personId","known_for_department","personImage","profile_path","selectedPersonId","join","buildPeopleQuestionHtml","personKnownForZero","known_for","title","movieOverviewZero","overview","personKnownForOne","movieOverviewOne","personKnownForTwo","movieOverviewTwo","answerChoicesHtml","processQuestion","movies","selectedMovie","movie","buildAnswerChoiceHtml","movieTitle","movieId","movieImage","poster_path","selectedMovieId","buildQuestionHtml","movieOverview","append","hide","click","each","$selectedChoice","find","attr","currentId","correctId","first","parent","show","axios","get","params","api_key","then","response","data","shows","location","reload"],"mappings":"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","file":"main.9da9c246.js","sourceRoot":"..","sourcesContent":["$(function () {\n  let questionList = []\n  const questionChoices = []\n  let answerArray = []\n  const apiKey = process.env.TMDB_API_KEY\n  const trendingMovieUrl = \"https://api.themoviedb.org/3/trending/movie/week\"\n  const trendingTvUrl = \"https://api.themoviedb.org/3/trending/tv/week\"\n  const trendingPeopleUrl = \"https://api.themoviedb.org/3/trending/person/week\"\n  const imageUrl = \"https://image.tmdb.org/t/p/w300_and_h450_bestv2/\"\n  let quizScore = 0\n\n  $('.quiz-container').hide()\n\n  //add anonymous arrow function for next button\n  $(\"#see-results\").click(() => {\n    //console.log(\"results\")\n    $(\".choices\").each(function(index) {\n      // // answerArray.includes(parseInt($('input[type=radio][name=${}]:checked').attr('id')))\n      // var item1 = $( \"li.item-1\" )[ 0 ];\n      // $( \"li.item-ii\" ).find( item1 ).css( \"background-color\", \"red\" );\n      //$ as jQuery object(naming convention;best practice)\n      const $selectedChoice = $(\"input:checked\")\n      console.log($(this).find($selectedChoice).attr(\"id\"))\n      const currentId = $(this).find($selectedChoice).attr(\"id\")\n      console.log(`Current ID - ${currentId}`)\n      const correctId = $(this).find(\"input\").first().attr(\"name\")\n      console.log(`Correct ID - ${correctId}`)\n      console.log(currentId === correctId)\n\n      if (currentId === correctId) {\n        console.log(\"selected correct answer\")\n        $(this).find($selectedChoice).parent().attr(\"class\", \"answer-choice fa fa-check fa-2x\")\n      } else {\n        console.log(\"selected incorrect answer\")\n        //adds CSS style to incorrect selection\n        $(this).find($selectedChoice).parent().attr(\"class\", \"answer-choice fa fa-times fa-2x\")\n        //adds CSS style to choice with correct ID\n        $(this).find(\"#\" + correctId).parent().attr(\"class\", \"answer-choice fa fa-check fa-2x\")\n      }\n    })\n  })\n  //add anonymous arrow function for previous button\n  $(\"#go-back\").click(() => {\n    console.log('clicking home button')\n    $('.home-container').show()\n    $('.quiz-container').hide()\n  })\n\n  $(\"#movie-link\").click(() => {\n    // window.location.pathname = '/movie_quiz.html'\n    // window.location.href = 'http://localhost:1234/movie_quiz.html'\n    // window.onload = function() {\n      // trendingMovies();\n    // }\n    console.log(\"go to movie quiz\")\n    trendingMovies()\n    $('.home-container').hide()\n    $('.quiz-container').show()\n  })\n\n  $(\"#tv-link\").click(() => {\n    // window.location.pathname = '/tv_quiz.html'\n    // window.location.href = 'http://localhost:1234/tv_quiz.html'\n    // window.onload = function() {\n    $('.home-container').hide()\n    $('.quiz-container').show()\n    trendingTvShows();\n    // }\n    console.log(\"go to tv quiz\")\n  })\n\n  $(\"#people-link\").click(() => {\n    $('.home-container').hide()\n    $('.quiz-container').show()\n    trendingPeople();\n    // window.onclick = function() {\n      // trendingTvShows();\n    // }\n    //console.log(\"go to people quiz\")\n  })\n\n  $(\"#reset\").click(() => {\n    location.reload()\n  })\n\n  updateUi()\n\n\n  function trendingMovies() {\n    console.log('making API call to movies')\n    axios.get(trendingMovieUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      console.log(response)\n      const movies = response.data.results\n      questionList = []\n      return createQuestions(movies, 'movie')\n    })\n\n  }\n\n  function trendingTvShows() {\n    console.log('making API call to tv')\n    axios.get(trendingTvUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      console.log(response)\n      const shows = response.data.results\n      questionList = []\n      return createQuestions(shows, 'tv')\n    })\n  }\n\n  function trendingPeople() {\n    console.log('making API call to people')\n    axios.get(trendingPeopleUrl, {\n      params: {\n        api_key: apiKey\n      }\n    })\n    .then((response) => {\n      console.log(response)\n      const people = response.data.results\n      questionList = []\n      return createQuestions(people, 'people')\n    })\n\n\n    // $.ajax({\n    //   url: trendingPeopleUrl,\n    //   type: \"GET\",\n    //   data: { api_key: apiKey }\n    // })\n    //   .done((response) => {\n    //     const people = response.results\n    //     //  console.log(response)\n    //\n    //     createQuestions(people)\n    //   })\n    //   .fail(() => {\n    //     alert(\"an error occured\")\n    //   })\n\n  }\n\n  function createQuestions(results, quizType) {\n    //lojack to shuffle the parameter passed into function\n    const shuffledResults = _.shuffle(results)\n    // console.log(shuffledResults)\n    //iterate through the array\n    //structure - [[],[],[],[],[]]\n    let question = []\n    shuffledResults.forEach((result, index) => {\n      //create an empty question array and store 4 numbers in an inner array unitl all possibilities are in an array\n      //group every 4 elements in their own array\n      question.push(result)\n      if ((index + 1) % 4 === 0) {\n        questionList.push(question)\n        question = []\n      }\n\n    })\n    // console.log(questionList)\n    updateUi(quizType)\n    return questionList\n  }\n\n  function updateUi(quizType) {\n    $('.question-list').html('')\n    console.log(questionList)\n    //4 choices for each question; 5 questions\n    //loop through the questionList array to pull the 4 properties for title\n    //prints the amount of arrays there are\n    questionList.forEach((questions) => {\n\n      let questionHtml\n      if (quizType === 'people') {\n        questionHtml = processPeopleQuestion(questions)\n      } else if (quizType === 'movie' || quizType === 'tv') {\n        questionHtml = processQuestion(questions)\n      }\n      //console.log(questionHtml)\n      $(\".question-list\").append(questionHtml)\n    })\n  }\n\n  function processQuestion(movies) {\n    //select a random movie to be the correct movie\n    const selectedMovie = _.sample(movies)\n    //console.log(selectedMovie)\n    answerArray.push(selectedMovie.id)\n    const choicesHtml = movies.map((movie) => {\n      return buildAnswerChoiceHtml(movie.title,movie.id,movie.poster_path,selectedMovie.id)\n    }).join('')\n    //console.log(choicesHtml)\n    return buildQuestionHtml(selectedMovie.overview, choicesHtml)\n  }\n\n  function buildAnswerChoiceHtml (movieTitle,movieId,movieImage,selectedMovieId) {\n    return (\n      `<div class=\"answer-choice\">\n        <input type=\"radio\" class=\"choice-button\" name=\"${selectedMovieId}\" id=\"${movieId}\">\n        <span class='answer-choice-label'> <img class=\"choice-image\" src=\"${imageUrl}${movieImage}\"></img> ${movieTitle}</span>\n      </div>`\n    )\n  }\n\n  function buildQuestionHtml(movieOverview, answerChoicesHtml) {\n    return (\n      `<div class=\"question-container\">\n        <p class=\"question\">\n          Movie Overview -  ${movieOverview}\n        </p>\n\n        <div class=\"choices-container\">\n          <div class=\"choices-header\">\n            Choices:\n              <div class=\"choices\">\n                ${answerChoicesHtml}\n              </div>\n          </div>\n        </div>\n      </div>`\n    )\n  }\n\n  //****PEOPLE quiz functions*****\n  function processPeopleQuestion(people) {\n    //select a random movie to be the correct movie\n    const selectedPerson = _.sample(people)\n    console.log(selectedPerson)\n    answerArray.push(selectedPerson.id)\n    const choicesHtml = people.map((person) => {\n      return buildPeopleAnswerChoiceHtml(person.name,person.id,person.known_for_department,person.profile_path,selectedPerson.id)\n    }).join('')\n    //console.log(choicesHtml)\n    return buildPeopleQuestionHtml(selectedPerson.known_for[0].title,selectedPerson.known_for[0].overview,selectedPerson.known_for[1].title,selectedPerson.known_for[1].overview,selectedPerson.known_for[2].title,selectedPerson.known_for[2].overview, choicesHtml)\n  }\n\n  function buildPeopleAnswerChoiceHtml (personName,personId,personKnownFor,personImage,selectedPersonId) {\n    return (\n      `<div class=\"answer-choice\">\n        <input type=\"radio\" class=\"choice-button\" name=\"${selectedPersonId}\" id=\"${personId}\">\n        <span class='answer-choice-label'> <img class=\"choice-image\" src=\"${imageUrl}${personImage}\"></img> ${personName}</span>\n      </div>`\n    )\n  }\n\n  function buildPeopleQuestionHtml(personKnownForZero,movieOverviewZero,personKnownForOne,movieOverviewOne,personKnownForTwo,movieOverviewTwo, answerChoicesHtml) {\n    return (\n      `<div class=\"question-container\">\n        <p class=\"question\">\n          This person is asscoiated with\n        </p>\n        <ol>\n          <li>${personKnownForZero} - ${movieOverviewZero}</li>\n          <li>${personKnownForOne} - ${movieOverviewOne}</li>\n          <li>${personKnownForTwo} - ${movieOverviewTwo}</li>\n        </ol>\n        <div class=\"choices-container\">\n          <div class=\"choices-header\">\n            Choices:\n              <div class=\"choices\">\n                ${answerChoicesHtml}\n              </div>\n          </div>\n        </div>\n      </div>`\n    )\n  }\n})\n"]}